@{
    ViewBag.Title = "待审核户外列表";
    Layout = "~/Views/Shared/_LayoutPersonal.cshtml";
}
<article class="personal clearfix">
    <div class="personal-left">
        <div class="personal-nav">
            @Html.Partial("_PersonalLeftNav")
        </div>
    </div>
    <div class="personal-right">
        <div class="personal-right-body">
            <div class="personal-body-title clearfix">
                <ul class="personal-tab clearfix">
                    <li><a href="@Url.Action("index")"><span>显示中</span></a></li>
                    <li><a href="@Url.Action("notshow")"><span>未显示</span></a></li>
                    <li class="selected"><a href="@Url.Action("preverify")"><span>待审核</span></a></li>
                    <li><a href="@Url.Action("verifyfailed")"><span>审核失败</span></a></li>
                    <li><a href="@Url.Action("delete")"><span>已删除</span></a></li>
                </ul>
                <a class="btn btn-success pull-right" style="margin-top:-30px" href="@Url.Action("add")">添加户外媒体</a>
            </div>
            <div class="personal-form mt20">

                @(Html.Kendo().Grid<OutDoorListItem>()
                    .Name("Grid")
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.MediaID).Title("媒体ID")
                            .Sortable(false)
                            .ClientTemplate("<input type='checkbox' name='ID_check' id='#=MediaID#_check'  class='chkbx' value='#=MediaID#' />")
                            .HeaderTemplate("<div style='text-align:center'><input type='checkbox' id='checkAll' onclick='Grid.checkAll(this)' title='全选'/></div>")
                            .Width(40).HtmlAttributes(new { style = "text-align:center" });
                        columns.Bound(c => c.FocusImg).ClientTemplate("<img class='table-list-img' src='#=FocusImg#' alt='#=Name#' />").Width(76).Sortable(false);
                        columns.Bound(c => c.Name);
                        columns.Bound(c => c.AddTime).Format("{0:yyyy-MM-dd}").Width(100).Title("添加时间");
                        columns.Template(@<text></text>)
                            .ClientTemplate(@"<a class='k-button k-button-icontext ' href='"
                            + Url.Action("edit", "outdoor") + "/#=MediaID#'><span class='k-icon k-edit'></span>编辑</a>"
                            + "<a class='k-button k-button-icontext ' href='" + Url.Action("setauctioncalendar", "outdoor") + "/#=MediaID#' ><span class='k-icon k-i-calendar'></span>排期</a>"
                            + "<a class='k-button k-button-icontext ' href='javascript:void(0);' onclick='Grid.deleteSingle(this,\"#=MediaID#\");' ><span class='k-icon k-i-close'></span>删除</a>"
                            ).Title("编辑").Width(240);
                    })
                  .ToolBar(toolbar =>
                    {
                        toolbar.Custom().Text("批量删除").HtmlAttributes(new { onclick = "Grid.deleteAll(this);", href = "javascript:void(0);" });
                    })
                    .Pageable()
                    .Sortable()
                    .Scrollable()
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(20)
                        .Model(model => model.Id(c => c.MediaID))
                        .Sort(sort => sort.Add(x => x.AddTime).Descending())
                        .Read(read => read.Action("outdoor_preverify", "outdoor"))
                     )
                     .HtmlAttributes(new { style = "height:500px;" })
                    )

                <script type="text/javascript">
                    var Grid = {
                        id: 'Grid',
                        checkAll: function(element) {
                            var self = Grid;
                            var state = $(element).is(':checked');
                            $('[name="ID_check"]').attr('checked', state);
                        },
                        getCheckIds: function() {
                            return $.map($('[name="ID_check"]:checked'), function(item) { return $(item).val() }).join(',');
                        },
                        addSpinner: function(element) {
                            var $spinner = $('<img class="ajax-working" src="@Url.Content("~/Content/images/min-loading.gif")" title="work...." />').appendTo($(element));
                            $(element).addClass('disabled');
                        },
                        removeSpinner: function(element) {
                            $(element).find('.ajax-working').remove();
                            $(element).removeClass('disabled');
                        },
                        excute: function(element, url, Ids) {
                            if ($(element).hasClass('disabled'))
                                return false;
                            var self = Grid;
                            if (Ids) {
                                self.addSpinner(element);
                                $.ajax({
                                    type: 'POST',
                                    url: url,
                                    data: { ids: Ids },
                                    success: function(res) {
                                        if (res) {
                                            var grid = $("#Grid").data("kendoGrid");
                                            grid.dataSource.read();
                                            grid.refresh();
                                        }
                                    },
                                    complete: function() {
                                        self.removeSpinner(element);
                                    }
                                })
                            } else {
                                alert('请选择要处理的信息');
                                return false;
                            }
                        },

                        deleteAll: function(element) {
                            var self = Grid;
                            var url = '@Url.Action("setdelete", "outdoor")';
                            var Ids = self.getCheckIds();
                            self.excute(element, url, Ids);
                        },
                        deleteSingle: function(element, id) {
                            var self = Grid;
                            var url = '@Url.Action("setdelete", "outdoor")';
                            var Ids = id;
                            self.excute(element, url, Ids);
                        }
                    }

                </script>
            </div>
        </div>

    </div>
</article>
